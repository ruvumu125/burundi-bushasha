name: Deploy to VPS

on:
  push:
    branches:
      - master  # Adjust to your branch name

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no deployer@${{ secrets.VPS_HOST }} << 'EOF'
            set -e  # Stop script on errors

            # Check if the directory exists, and if not, clone the repository
            if [ ! -d "/var/www/my-apps/burundi-buhire-app-api" ]; then
              git clone https://github.com/your-repo/burundi-buhire-app-api.git /var/www/my-apps/burundi-buhire-app-api
            fi

            # Navigate to your application directory
            cd /var/www/my-apps/burundi-buhire-app-api/ || { echo "Failed to change directory"; exit 1; }

            # Mark the directory as safe
            git config --global --add safe.directory /var/www/my-apps/burundi-buhire-app-api

            # Pull the latest changes
            git pull origin master --allow-unrelated-histories || { echo "Git pull failed"; exit 1; }

            # Build JAR file (assuming you're using Maven)
            mvn clean package -DskipTests || { echo "Maven build failed"; exit 1; }

            # Navigate to the directory where docker-compose.yml file is located
            cd /var/www/my-apps/ || { echo "Failed to change directory"; exit 1; }

            # Rebuild and restart only the Spring Boot container (replace 'spring-boot-app' with your service name)
            docker-compose up -d --build spring-boot-app || { echo "Docker Compose build failed"; exit 1; }

          EOF
